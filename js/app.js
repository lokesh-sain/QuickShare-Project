import{drop,fileInput,browseBtn,host,uploadUrl,emailUrl,progress_container,toast,maxAllowedSize,progress_bar,percentageDisplay,uploadStatus,fileURL,sharing_container,emailForm,copyBtn,fileInfoWrapper,qrGenerator,clipBoardOnClick,uploading,uploadSuccessful}from"./declare.js";drop.addEventListener("dragover",(e=>{e.preventDefault(),drop.classList.contains("dragged")||drop.classList.add("dragged")})),drop.addEventListener("dragleave",(e=>{e.preventDefault(),drop.classList.contains("dragged")&&drop.classList.remove("dragged")})),drop.addEventListener("drop",(e=>{e.preventDefault(),drop.classList.remove("dragged");const t=e.dataTransfer.files;fileInput.files=t,upload()})),browseBtn.addEventListener("click",(e=>{fileInput.click()})),fileInput.addEventListener("change",(e=>{upload()}));const calculateFileSize=(e,t)=>{if(0==e)return"0 Bytes";let o=t||2,a=Math.floor(Math.log(e)/Math.log(1e3));return parseFloat((e/Math.pow(1e3,a)).toFixed(o))+" "+["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"][a]},upload=()=>{const e=fileInput.files[0];if(fileInput.files.length>1)return resetInput(),void showToast("You Can Upload 1 File Only.");if(e.size>maxAllowedSize)return resetInput(),void showToast("Can't upload more than 100MB.");{const t=e.name,o=calculateFileSize(e.size);fileInformation(t,o);const a=new FormData;a.append("myfile",e),fileInfoWrapper.classList.remove("d-none"),uploadSuccessful.style.display="none",progress_container.style.display="block";const l=new XMLHttpRequest;l.onreadystatechange=()=>{l.readyState===XMLHttpRequest.DONE&&(l.response?(displayLink(JSON.parse(l.response)),setStorage(e)):showToast(`Something Went Wrong : ${l.statusText}`))},l.upload.onprogress=updateProgress,l.upload.onerror=()=>{resetInput(),showToast(`Error in upload: ${l.statusText}`),uploading.style.display="none",uploadStatus.innerHTML="Error"},l.open("POST",uploadUrl),l.send(a)}},updateProgress=e=>{let t=Math.round(e.loaded/e.total*100);progress_bar.style.width=t+"%",percentageDisplay.innerHTML=t+"%"},displayLink=({file:e})=>{uploadStatus.innerHTML="Uploaded.",uploading.style.display="none",uploadSuccessful.style.display="block",progress_container.style.display="none",sharing_container.style.display="block",emailForm[2].innerHTML="Send",emailForm[2].removeAttribute("disabled"),progress_bar.style.width="0%",percentageDisplay.innerHTML="0%",resetInput(),fileURL.value=e};copyBtn.addEventListener("click",(()=>{fileURL.select(),document.execCommand("copy"),showToast("Copied To Clipboard.")}));const resetInput=()=>{fileInput.value=""};emailForm.addEventListener("submit",(e=>{e.preventDefault();const t={uuid:fileURL.value.split("/").splice(-1,1)[0],emailTo:emailForm.elements.toEmail.value,emailFrom:emailForm.elements.fromEmail.value};console.table(t),emailForm[2].setAttribute("disabled","true"),emailForm[2].innerHTML="Sending..",console.log(emailForm[2]),fetch(emailUrl,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(t)}).then((e=>e.json())).then((({success:e})=>{if(!e){let e=document.getElementById("emailBackdrop");bootstrap.Modal.getInstance(e).hide(),sharing_container.style.display="none",fileInfoWrapper.classList.add("d-none"),showToast("Email Sent"),emailForm.elements.toEmail.value="",emailForm.elements.fromEmail.value=""}}))}));const showToast=e=>{let t;toast.innerHTML=e,toast.classList.add("my-toast--visible"),clearTimeout(t),t=setTimeout((()=>{toast.classList.remove("my-toast--visible")}),2e3)},fileInformation=(e,t)=>{const o=document.querySelector(".filename"),a=document.querySelector(".filesize");uploading.style.display="block",uploadStatus.innerHTML="Uploading..",o.innerHTML=e,a.innerHTML=`${t}.`};function updateRecentUploads(){for(let e=0;e<clipBoardOnClick.length;e++)clipBoardOnClick[e].addEventListener("click",(()=>{const t=clipBoardOnClick[e].getAttribute("data-index");document.getElementsByClassName("fileDownloadLink")[t].select(),document.execCommand("copy"),showToast("Copied To Clipboard.")}))}qrGenerator.addEventListener("click",(()=>{const e=document.querySelector("#qrCode"),t=`https://api.qrserver.com/v1/create-qr-code/?size=625x625&data=${fileURL.value}`;e.setAttribute("src",t),e.setAttribute("alt",t)}));const showRecentUploads=()=>{if(localStorage.getItem("recentUploads")){const e=document.querySelector(".recentUpload"),t=document.querySelector("#recentUploadContainer");let o=[];o=JSON.parse(localStorage.getItem("recentUploads"));let a="",l=new Date;o.forEach(((t,o)=>{l=JSON.stringify(t[3]),l=new Date(JSON.parse(l)),new Date<l?(a+=`<tr><td>${t[0]}</td><td class="d-none d-sm-block">${t[1]}.</td><td> \n                <input type="text" class="inputBoxReset text-success fileDownloadLink"  readonly value="${t[2]}"> \n                <img src="./assets/images/content_copy.svg" alt="CopySvg" class="img-fluid px-2 clipBoardOnClick modalCopysvg" data-index="${o}">\n                </td><td class="d-none d-sm-block">${l.toLocaleDateString()+" "+l.toLocaleTimeString()} </td></tr>`,e.style.display="block"):removeElement(o)})),t.innerHTML=a}updateRecentUploads()},removeElement=e=>{let t=JSON.parse(localStorage.getItem("recentUploads"));t.splice(e,1),localStorage.setItem("recentUploads",JSON.stringify(t))},setStorage=({name:e,size:t}=fileInfo)=>{const o=calculateFileSize(t);if(null==localStorage.getItem("recentUploads")){const t=[],a=fileURL.value;t.push([e,o,a,setExpiryDate()]),localStorage.setItem("recentUploads",JSON.stringify(t)),showRecentUploads()}else{const t=JSON.parse(localStorage.getItem("recentUploads")),a=fileURL.value;t.push([e,o,a,setExpiryDate()]),localStorage.setItem("recentUploads",JSON.stringify(t)),showRecentUploads()}},setExpiryDate=()=>{let e=new Date;return e.setHours(e.getHours()+24),e};window.onload=showRecentUploads,window.addEventListener("storage",(function(e){document.querySelector(".recentUpload").style.display="none";document.querySelector("#recentUploadContainer").innerHTML=""}));
window.onbeforeunload = function(){
    return 'Are you sure you want to leave?';
  };